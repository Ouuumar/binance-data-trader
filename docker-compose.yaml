version: '3.9'
services:
    fast-api:
      build: ./api
      container_name: fastapi_container
      ports:
        - 8000:8000
      environment:
        MYSQL_PASSWORD: ${MYSQL_PASSWORD}
        MYSQL_USER: ${MYSQL_USER}
        MYSQL_IP: ${MYSQL_IP}
        MYSQL_PORT: ${MYSQL_PORT}
        MYSQL_DATABASE: ${MYSQL_DATABASE}
        KLINES_TABLE: ${KLINES_TABLE}
      depends_on:
        mysql-db:
          condition: service_healthy
      networks:
          pvnet:
              ipv4_address: 172.1.1.5
    dash-app:
      build: ./dash
      container_name: dash_container
      ports:
        - 8050:8050
      networks:
          pvnet:
              ipv4_address: 172.1.1.4
    etl-app:
      build: ./etl
      environment:
        MYSQL_PASSWORD: ${MYSQL_PASSWORD}
        MYSQL_USER: ${MYSQL_USER}
        MYSQL_IP: ${MYSQL_IP}
        MYSQL_PORT: ${MYSQL_PORT}
        MYSQL_DATABASE: ${MYSQL_DATABASE}
        KLINES_TABLE: ${KLINES_TABLE}
      depends_on:
        mysql-db:
          condition: service_healthy
      networks:
          pvnet:
              ipv4_address: 172.1.1.3
    mysql-db:
      image: mysql:8.0.32
      container_name: mysql_container
      environment: 
        MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
        MYSQL_USER: ${MYSQL_USER}
        MYSQL_IP: ${MYSQL_IP}
        MYSQL_PORT: ${MYSQL_PORT}
        MYSQL_DATABASE: ${MYSQL_DATABASE}
        KLINES_TABLE: ${KLINES_TABLE}
      ports:
        - 3307:3306
      volumes:
        - db:/var/lib/mysql
        - ./create_db.sql:/docker-entrypoint-initdb.d/create_db.sql
      networks:
          pvnet:
              ipv4_address: 172.1.1.1
      healthcheck:
        test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
        timeout: 20s
        retries: 10
volumes:
  db:
    driver: local

networks:
  pvnet:
    driver: bridge
    ipam:
      config:
        - subnet: 172.1.1.1/16